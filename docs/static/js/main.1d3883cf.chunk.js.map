{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGif","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","key","GifExpertAPP","categories","setCategory","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,Y,uBCTlBK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAEMI,MAAMF,GAFZ,cAEZG,EAFY,gBAGKA,EAAUC,OAHf,uBAGVC,EAHU,EAGVA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARxB,kBAYXM,GAZW,4CAAH,sDCENO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EACXhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAwBrC,OAnBAC,qBAAU,WACNxB,EAAOC,GACFwB,MAAK,SAAAd,GAGFd,QAAQC,IAAIa,GACZY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAMtB,CAACpB,IAKGqB,EDpBwBI,CAAYzB,GAA7BU,EAFuB,EAE7BH,KAAWa,EAFkB,EAElBA,QAKnB,OAJAxB,QAAQC,IAAIuB,GAKR,oCACI,4BAAKpB,GACL,yBAAKgB,UAAU,aACVI,GAAW,0CAEXV,EAAID,KAAI,SAACC,GAAD,OACL,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACLD,UElBfiB,EAAe,WAAO,IAAD,EACI3C,mBAAS,CAAC,WADd,mBACvB4C,EADuB,KACXC,EADW,KAE9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAa9C,cAAe8C,IAC5B,6BACA,4BAEQD,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CAAS0B,IAAK1B,EACVA,SAAUA,UCVtC8B,IAASC,OAEP,kBAAC,EAAD,MACEC,SAASC,eAAe,U","file":"static/js/main.1d3883cf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGif = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=HsKinNs6bSI1QFdGH1uljrAJDR2fW5Vt`\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    return gifs\r\n\r\n}   ","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    // console.log(props)\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\n// import { useState, useEffect } from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\n// import { getGif } from '../helpers/getGif'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // const [image, setImage] = useState([])\r\n    const { data: img, loading } = useFetchGif(category);\r\n    console.log(loading)\r\n\r\n\r\n    // getGif();\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n                {loading && <p>Loading....</p>}\r\n\r\n                {img.map((img) => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img} />\r\n                ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGif = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then(img => {\r\n\r\n\r\n                console.log(img)\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n\r\n\r\n\r\n            })\r\n    }, [category])\r\n    // useEffect(() => {\r\n    //     getGif(category).then(setImage)\r\n    // }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertAPP = () => {\r\n    const [categories, setCategory] = useState(['Naruto'])\r\n    return (\r\n        <div>\r\n            <h2>GifExpertAPP</h2>\r\n            <AddCategory setCategories={setCategory} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid key={category}\r\n                            category={category}\r\n                        />\r\n\r\n\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertAPP } from './GifExpertApp';\n\nReactDOM.render(\n\n  <GifExpertAPP />\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}